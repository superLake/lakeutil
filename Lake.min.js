!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(r,n,e){o.o(r,n)||Object.defineProperty(r,n,{enumerable:!0,get:e})},o.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},o.t=function(n,r){if(1&r&&(n=o(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var t in n)o.d(e,t,function(r){return n[r]}.bind(null,t));return e},o.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return o.d(n,"a",n),n},o.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},o.p="",o(o.s="./js/Lake.js")}({"./js/Lake.js":
/*!********************!*\
  !*** ./js/Lake.js ***!
  \********************/
/*! no static exports found */function(module,exports){eval("/*\r\n * @Author: sznews\r\n * @Date:   2018-12-21 09:18:20\r\n * @Last Modified by:   xiaoy\r\n * @Last Modified time: 2019-05-23 00:17:39\r\n */\r\nvar timer;\r\n// 全局上下文this\r\nvar context=this;\r\n/**\r\n * @Author   Lake\r\n * @DateTime 2018-12-29\r\n * @param    {objdom}  获取的节点\r\n * @param    {str}     要输出的字符串\r\n * @param    {i}       从第几个字符开始\r\n * @return   {null}\r\n */\r\nfunction printWord(objdom, str, i) {\r\n    if (i < str.length) {\r\n        objdom.innerHTML = str.slice(0, i++) + '_';\r\n        timer = setTimeout(printWord, 200, objdom, str, i);\r\n    } else {\r\n        objdom.innerHTML = str;\r\n        clearTimeout(timer);\r\n    }\r\n}\r\n/**\r\n * [throttle description]\r\n * @Author   Lake\r\n * @DateTime 2019-02-25T21:29:47+0800\r\n * @param    {[function]}                 method [需要时间节流的方法]\r\n * @param    {[time]}                     delay  [节流事件（以毫秒算）]\r\n * @return   {null}                     \r\n */\r\nfunction throttle(method,delay){\r\n\tvar timer=null;\r\n\tif(timer){\r\n\t\tclearTimeout(timer)\r\n\t}\r\n\ttimer=setTimeout(function(){\r\n\t\tmethod();\r\n\t}, delay)\r\n}\r\n_ = {\r\n    //网络请求\r\n    request: function(param) {\r\n        var _this = this;\r\n        $.ajax({\r\n            type: param.method || 'get',\r\n            url: param.url || '',\r\n            dataType: param.type || 'json',\r\n            data: param.data || '',\r\n            success: function(res) {\r\n                // 请求成功\r\n                // if (0 === res.status) {\r\n                    typeof param.success === 'function' && param.success(res.data, res.msg);\r\n                // }\r\n                //如果没有登录状态，需要强制登录\r\n                // else if (10 === res.status) {\r\n                //     _this.doLogin;\r\n                // }\r\n                //请求数据错误\r\n                // else if (1 === res.status) {\r\n                //     typeof param.error === 'function' && param.error(res.msg);\r\n                // }\r\n                // typeof param.success === 'function' && param.success(res);\r\n            },\r\n            error: function(err) {\r\n                typeof param.error === 'function' && param.error(err);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *通用事件绑定函数\r\n     */\r\n    bindEvent: function(domObj, event, selector, fn) {\r\n        if (!fn) {\r\n            fn = selector;\r\n            selector = null;\r\n        }\r\n        domObj.addEventListener(event, function(e) {\r\n            var target;\r\n            if (selector) {\r\n                target = e.target;\r\n                if (target.matches(selector)) {\r\n                    fn.call(target, e);\r\n                }\r\n            } else {\r\n                fn(e);\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n     *通用数组、对象对象遍历\r\n     */\r\n    forEach: function(obj, fn) {\r\n        if (obj instanceof Array) {\r\n            obj.forEach(function(item, index) {\r\n                fn(item, index);\r\n            });\r\n        } else {\r\n            for (key in obj) {\r\n                fn(obj, key);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *获取url参数\r\n     */\r\n    getUrlParmName: function(name) {\r\n        var regExp = new regExp('(^|&)' + name + '=([^&]*)(&|$)');\r\n        var result = window.location.search.substr(1).match(reg);\r\n        return result ? decodeURIComponent(result[2]) : null;\r\n    },\r\n    /**\r\n     * 获取原始图片大小\r\n     */\r\n    getPicSize: function(img, callback) {\r\n        var nWidth, nHeight;\r\n        if (img.naturalWidth) {\r\n            nWidth = img.naturalWidth;\r\n            nHeight = img.naturalWidth\r\n        } else {\r\n            var image = new Image();\r\n            image.src = img.src;\r\n            image.onload = function() {\r\n                image.callback(img.width, img.height);\r\n            }\r\n        }\r\n        return [nWidth, nHeight];\r\n    },\r\n    /**\r\n     * 参数验证\r\n     */\r\n    validate: function(value, type) {\r\n        var value = $.trim(value);\r\n        //非空验证\r\n        if ('require' === type) {\r\n            return !!value;\r\n            console.log(!!value);\r\n        }\r\n        //手机号验证\r\n        if ('phone' === type) {\r\n            return /^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$/.test(value);\r\n        }\r\n        //邮箱验证\r\n        if ('email' === type) {\r\n            return /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value);\r\n        }\r\n        //统一社会信用代码验证\r\n        if ('cuscc' === type) {\r\n            return /[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}/.test(value);\r\n        }\r\n        //身份证验证\r\n        if ('idnum' === type) {\r\n            return /^\\d{6}(18|19|20)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|[xX])$/.test(value);\r\n        }\r\n    },\r\n    /**\r\n     * 日期格式化\r\n     */\r\n    dateFormate: function(fmt, date) { //author: meizz   \r\n        var obj = {\r\n            \"M+\": date.getMonth() + 1, //月份   \r\n            \"d+\": date.getDate(), //日   \r\n            \"h+\": date.getHours(), //小时   \r\n            \"m+\": date.getMinutes(), //分   \r\n            \"s+\": date.getSeconds(), //秒   \r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度   \r\n            \"S\": date.getMilliseconds() //毫秒   \r\n        };\r\n        if (/(y+)/.test(fmt)) {\r\n            // console.log('RegExp.$1:'+fmt.replace(RegExp.$1, (date.getFullYear() + \"\")));\r\n            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n            console.log('fmt:' + fmt);\r\n        }\r\n        for (var k in obj)\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n                // console.log('RegExp.$1:'+RegExp.$1);\r\n                // fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (obj[k]) : ((\"00\" + obj[k]).substr((\"\" + obj[k]).length)))\r\n                if (RegExp.$1.length == 1) {\r\n                    fmt = fmt.replace(RegExp.$1, obj[k]);\r\n                } else {\r\n                    var temp = '00' + obj[k];\r\n                    var len = \"\" + obj[k];\r\n                    temp = temp.substr(len.length);\r\n                    fmt = fmt.replace(RegExp.$1, temp);\r\n                }\r\n            }\r\n        return fmt;\r\n    },\r\n    /**\r\n     * 接收后台发过来的二进制数据流\r\n     * （用于接收后台图片验证码）\r\n     */\r\n    getImageSteam:function(url,imgid){\r\n        var xhr =new XMLHttpRequest();\r\n        xhr.open('get',url,true);\r\n        // 设置后台返回数据类型，blod为二进制封装类型\r\n        xhr.responseType='blob';\r\n        xhr.onload=function(){\r\n            if(this.status==200){\r\n                var blob=this.response;\r\n                var img=document.getElementById(imgid);\r\n                // 图片加载完后消除blod，如果不消除就会导致页面性能减慢\r\n                img.onload=function(e){\r\n                    window.URL.revokeObjectURL(blob);\r\n                };\r\n                img.src=window.URL.createObjectURL(blob);\r\n            }\r\n        }\r\n        xhr.send();\r\n    },\r\n    /**\r\n     * [throttle description]\r\n     * @Author   Lake\r\n     * @DateTime 2019-02-25T21:29:47+0800\r\n     * @param    {[function]}                 method [需要时间节流的方法]\r\n     * @param    {[time]}                     delay  [节流事件（以毫秒算）]\r\n     * @return   {null}                     \r\n     */\r\n    throttle:function(method,delay){\r\n    \tvar timer=null;\r\n    \tif(timer){\r\n    \t\tclearTimeout(timer)\r\n    \t}\r\n    \ttimer=setTimeout(function(){\r\n    \t\tmethod();\r\n    \t}, delay)\r\n    },\r\n    /**\r\n     * 传入的字符串根据条件转码或解码\r\n     * @Author   Lake\r\n     * @DateTime 2019-05-22T22:51:31+0800\r\n     * @param    {[string]}                 strType [输入操作类型，encode是转码，decode是解码]\r\n     * @param    {[string]}                 str     [转码或解码的字符串]\r\n     * @return   {[string]}                         [转码或解码后的字符串]\r\n     */\r\n    uriCodeHandler:function(strType,str){\r\n    \t//如果输入的参数为string类型\r\n    \tif('string'===typeof str&&strType==='encode'){\r\n\t    \treturn encodeURIComponent(str)\r\n\t    }else if('string'===typeof str&&strType==='decode'){\r\n\t    \treturn decodeURIComponent(str)\r\n    \t}else if('object'===typeof str && strType==='encode'){\r\n    \t\tlet newobj={}\r\n    \t\tfor(let key in str){\r\n    \t\t\tnewobj[key]=encodeURIComponent(str[key])\r\n    \t\t}\r\n    \t\treturn newobj\r\n    \t}else if('object'===typeof str && strType==='decode'){\r\n    \t\tlet newobj={}\r\n    \t\tfor(let key in str){\r\n    \t\t\tnewobj[key]=decodeURIComponent(str[key])\r\n    \t\t}\r\n    \t\treturn newobj\r\n    \t}else{\r\n    \t\tthrow '请输入字符串或对象类型和正确的操作类型'\r\n    \t}\r\n    \t\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/Lake.js?")}});